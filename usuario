#include <stdio.h> //es la biblioteca estándar en C
#include <string.h> //incluye una libreria para manejo de strings
#include <stdlib.h>//archivo de cabecera de la biblioteca estándar
#define ARCHIVO "fichero.txt"
#define rayas printf("---------------------------------------------------------\n");//macro que incluye un conjunto de lineas para separar los textos
/*--------------------------------------------------------------------------
Autores: Luis Eladio Castro
         Randall Jimenez
         Josue Fernandez
I Tarea Programada
----------------------------------------------------------------------------*/
//Funciones Usadas
int Validar_Usuario(int boolean);//valida que el usuario exista
int Agrega_Usuario();//funcion que agrega un nuevo usuario
void Leer_Archivo();//funcion que lee el archivo
void Imprime();
void Menu();//funcion del menu del programa, imprime opciones y recibe numeros para estar mas ordenado
int busca_pos();
typedef struct{
    char nombre[20];
    char ip[20];
    char puerto[20];
    int largo;
}Users;
Users Usuario[20];
int LARGO=0;
int main (int argc,char **argv){
    Leer_Archivo();
    if(LARGO==0){
        printf("Su lista de contactos actual esta vacia\n");rayas;rayas;
    }else{
    printf("La cantidad de contactos es de %d\n",LARGO-1);rayas;rayas}
    while(1){//while infinito, termina cuando el usuario ingresa 0 en el menu
            Menu();//menu del sistema para facilitar el acceso
    }
    return 0;
}
void Imprime(){
    int i=0;
    while(i<LARGO-1){
        printf("%d: Nombre:%s -- IP:%s -- Puerto:%s\n",i+1,Usuario[i].nombre,Usuario[i].ip,Usuario[i].puerto);
        i++;
    } rayas;//conjunto de lineas que indica que el proceso actual ha finalizado
}
int Agrega_Usuario(){//funcion que agrega un usuario nuevo
    FILE *fp;//crea a variabe que alvergara al archivo
    char ip[100];//inicializa las variabes para guardar los datos
    char puerto[100];//inicializa las variabes para guardar los datos
    char usuario[100];//inicializa las variabes para guardar los datos

    fp = fopen ( ARCHIVO, "a" );//abre el archivo para escribir en el, si no existe se crea
    printf("\n Introduce el ip: ");//mensaje para el usuario
    fflush(stdin);//limpia el buffer de entrada para evitar errores en el manejo de información
    scanf("%s",&ip);//recibe los datos en la memoria
    strcpy(Usuario[LARGO].ip,ip);//da el valor del ip al usuario en la posicion pos
    strcat(ip," ");//añade un espacio para ordenarlos de mejor forma

    printf ("\n Introduce el puerto: " );//mensaje para el usuario
    fflush(stdin);//limpia el buffer de entrada para evitar errores en el manejo de información
    scanf("%s",&puerto);//recibe los datos en la memoria
    strcpy(Usuario[LARGO].puerto,puerto);//da el valor del puerto al usuario en la posicion pos

    printf ("\n Introduzca el nombre de usuario(Reconoce mayusculas): ");//mensaje para el usuario
    fflush(stdin);//limpia el buffer de entrada para evitar errores en el manejo de información
    scanf("%s",&usuario);//recibe los datos en la memoria
    strcpy(Usuario[LARGO].nombre,usuario);//da el nombre de usuario al usuario en la posicion pos
    strcat(usuario," ");//añade un espacio para ordenarlos de mejor forma

    rayas;//conjunto de lineas que indica que el proceso actual ha finalizado

    strcat (usuario,ip);//juntar los datos en una sola linea
    strcat (usuario,puerto);//junta los datos en una sola linea
    strcat(usuario,"\n"); //hace salt de linea en el archivo .txt
    LARGO++;
    fprintf (fp,usuario);//escribe los datos en el archivo txt

    fclose ( fp );//cierra el archivo de texto para evitar errores

    return 0;//retorna 0 si todos los procesos se completaron de forma correcta
}
int Validar_Usuario(int boolean){
    FILE *file;//inicia el valor que contendrá el archivo
    char usuario[100];//inicia variable
    char ip[100];//inicia variable
    char puerto[100];//inicia variable
    printf("Ingrese el nombre de contacto: ");//mensaje para el usuario
    fflush(stdin);//Limpia el buffer de entrada para evitar errores
    scanf("%s",&usuario);//guarda el valor ingresado en la variable usuario
    char palabra[100];//variable donde se guardará el valor
    file=fopen(ARCHIVO,"r");//abre el achivo de texto.
    while(!feof(file)){//mientras el archivo no llegue al final
        fscanf(file,"%s",palabra);//lee la primera palabra en el archivo
        if(strcmp(palabra,usuario)==0){//si el nombre de usuario en el archivo de texto es igual al buscado
                fscanf(file,"%s",&ip);// guarda el siguiente valor en ip
                fscanf(file,"%s",&puerto);//guarda el siguiente valor en puerto
                break;//termina la funcion para que deje de comparar
        }else{//si el valor no era el que se buscaba, pasa a la siguiente linea del archivo
            fscanf(file,"%s",palabra);fscanf(file,"%s",palabra);}//se mueve a la siguiente linea para evitar errores
    }
    if(boolean){
        printf("Nombre de contacto: %s\n",usuario);
        printf("Numero de IP: %s\n",ip);
        printf("Numero de puerto: %s\n",puerto);
        rayas;//conjunto de lineas que indica que el proceso actual ha finalizado
    }
    fclose(file);//cierra el achivo
    return 0;//retorna 0 si todo se realizó sin errores
}
void Leer_Archivo(){//Funcion que lee el archivo e ingresa su contenido en el struct
    FILE *archivo;//variable que contrendra la posicion del archivo
    archivo=fopen(ARCHIVO,"r");//abre el archivo para lectura
    if(archivo==NULL){//si el archivo no existe
        archivo=fopen(ARCHIVO,"a+");//se crea el archivo con nombre ARCHIVO
    }
    char palabra[100];//variable que guarda un archivo
    while(!feof(archivo)){//mientras que no se llega al final del archivo
        char o=getc(archivo);
        if(o==EOF){
            break;
        }
        fflush(stdin);//Se limpia el buffer de entrada para evitar errores
        fscanf(archivo,"%s",palabra);//guarda el valor de %s en palabra
        strcpy(Usuario[LARGO].nombre,palabra);//copia el cntenido de palabra en Usuario[LARGO]
        fflush(stdin);//Se limpia el buffer de entrada para evitar errores
        fscanf(archivo,"%s",palabra);//guarda el valor de %s en palabra
        strcpy(Usuario[LARGO].ip,palabra);//copia el cntenido de palabra en Usuario[LARGO]
        fflush(stdin);//Se limpia el buffer de entrada para evitar errores
        fscanf(archivo,"%s",palabra);//guarda el valor de %s en palabra
        strcpy(Usuario[LARGO].puerto,palabra);//copia el cntenido de palabra en Usuario[LARGO]
        LARGO++;
    }
    printf("Los contactos fueron cargados con exito\n");
    fclose(archivo);

}
void Menu(){
    int opcion;rayas;
    printf("Se encuentra en el menu del sistema\n");
    printf("1- Agregar un nuevo contacto\n2- Busqueda de un contacto\n3- Enviar mensajes\n4- Recibir mensajes\n5- Imprimir Contactos\n0: Salir\n");rayas;
    printf("\tIngrese la opcion a la que desea acceder: ");
    scanf("\t%d",&opcion);
    while((opcion<0)||(opcion>5)){
        printf("Ingrese uno de los numeros establecidos: ");
        scanf("\t%d",&opcion);
    }rayas;
    switch(opcion){//verifica cada opcion hasta que una se cumpla,ejecuta el codigo enterno y vuelve a preguntar
        case 0:
            exit(0);
            break;
        case 1:
            Agrega_Usuario();
            break;
        case 2:
            Validar_Usuario(1);
            break;
        case 3:
            break;
        case 4:
            break;
        case 5:
            if(LARGO==0){printf("Usted no tiene contactos para imprimir\n");}else{
            Imprime();}
            break;

    }
}
